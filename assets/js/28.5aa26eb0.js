(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{362:function(t,e,n){"use strict";n.r(e);var s=n(33),a=Object(s.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"服务端相关"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#服务端相关"}},[t._v("#")]),t._v(" 服务端相关")]),t._v(" "),n("ul",[n("li",[t._v("node")])]),t._v(" "),n("p",[t._v("基于V8引擎运行JS的容器运行环境")]),t._v(" "),n("ul",[n("li",[t._v("express")])]),t._v(" "),n("p",[t._v("基于node，实现MVC框架，以应用实例，中间件（普通中间件，路由中间件，错误处理中间件，第三方中间件），路由三种模式完成通过运用JS编写后端服务，完成前后端都运用JS一种语言来实现应用框架")]),t._v(" "),n("ul",[n("li",[t._v("koa")])]),t._v(" "),n("p",[t._v("基于node,实现的MVC框架，以应用实例，中间件（完成分离业务逻辑，独立控制流程控制，增强内部业务数据传递性），通过封装原始node中http模块，重写原始方式中处理模式，通过async,await模式使代码异步模式更加同步化处理")])])}),[],!1,null,null,null);e.default=a.exports}}]);