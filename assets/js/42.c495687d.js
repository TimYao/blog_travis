(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{339:function(t,a,v){"use strict";v.r(a);var _=v(33),s=Object(_.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"测试"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#测试"}},[t._v("#")]),t._v(" 测试")]),t._v(" "),v("p",[t._v("在项目的复杂，功能的多变性下，保证项目的开发中的稳固性，通过编写测试来更好的稳定开发，一方面测试有利于功能模块的bug追踪，一方面也变相可以增强对项目的功能类文档化的描述，当我们需要得知一个项目开发功能，可以通过看测试来最快获得")]),t._v(" "),v("h2",{attrs:{id:"测试分类"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#测试分类"}},[t._v("#")]),t._v(" 测试分类")]),t._v(" "),v("ul",[v("li",[t._v("单元测试")])]),t._v(" "),v("p",[t._v("编码中的最小单元的测试，例如对于某一个函数，模块，组件")]),t._v(" "),v("ul",[v("li",[t._v("集成测试")])]),t._v(" "),v("p",[t._v("组合了多个单元测试单元进行的集合性对外暴露的单元的测试")]),t._v(" "),v("ul",[v("li",[t._v("端到端测试")])]),t._v(" "),v("p",[t._v("从整体开发意图功能上来完善的测试，通过模拟各种行为环境来完成预期测试")]),t._v(" "),v("h2",{attrs:{id:"前端测试框架"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#前端测试框架"}},[t._v("#")]),t._v(" 前端测试框架")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("karma")])]),t._v(" "),v("li",[v("p",[t._v("mocha")])]),t._v(" "),v("li",[v("p",[t._v("jest")])])])])}),[],!1,null,null,null);a.default=s.exports}}]);